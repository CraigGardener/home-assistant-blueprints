blueprint:
  domain: automation
  source_url: https://github.com/CraigGardener/home-assistant-blueprints/blob/main/ikea-somrig.yaml
  name: IKEA SOMRIG
  description: "
    # IKEA SOMRIG

    Zigbee2MQTT blueprint for the IKEA SOMRIG remote.

    Works with:
    + IKEA SOMRIG shortcut button (E2213)

    Sotware Requirements:
    + ([MQTT](https://www.home-assistant.io/integrations/mqtt)
    + [Z2M addon](https://www.zigbee2mqtt.io/guide/installation/03_ha_addon.html)).

    ## Available controls:

    - Press the **1 Dot** or **2 Dots** buttons.
    - Double press the **1 Dot** or **2 Dots** button.
    - Press and hold the **1 Dot** or **2 Dots** button. Actions will be executed every *Helper - Hold delay*, but a maximum of *Helper - Max number of loops* times.
    "
  
  input:
    device:
      name: Device
      description: Select the device to use with this automation.
      default: ""
      selector:
        device:
          filter:
            integration: mqtt
            manufacturer: IKEA
            model: SOMRIG shortcut button (E2213)
    device_name:
      name: Device Name
      description: Copy the name of the device from above.
      default: ""
    base_topic:
      name: MQTT topic
      description: The topic configured in [Z2M addon](https://www.zigbee2mqtt.io/guide/usage/mqtt_topics_and_messages.html).
      default: zigbee2mqtt

    button_1_press_action:
      name: 1 Dot - Single press
      description: Choose action(s) to run when **1 Dot** button is **pressed**.
      default: []
      selector:
        action: {}
    button_2_press_action:
      name: 2 Dots - Single press
      description: Choose action(s) to run when **2 Dots** button is **pressed**.
      default: []
      selector:
        action: {}
    button_1_hold_action:
      name: 1 Dot - Hold
      description: Choose action(s) to run when **1 Dot** button is **pressed and held**.
      default: []
      selector:
        action: {}
    button_2_hold_action:
      name: 2 Dots - Hold
      description: Choose action(s) to run when **2 Dots** button is **pressed and held**.
      default: []
      selector:
        action: {}
    button_1_double_press_action:
      name: 1 Dot - Double press
      description:
        Choose action(s) to run when **1 Dot** button is **pressed twice**.
      default: []
      selector:
        action: {}
    button_2_double_press_action:
      name: 2 Dots - Double press
      description:
        Choose action(s) to run when **2 Dots** button is **pressed twice**.
      default: []
      selector:
        action: {}
    
    helper_hold_delay:
      name: Helper - Hold delay
      description: Delay between the execution of the **Hold** action(s).
      default: 250
      selector:
        number:
          unit_of_measurement: milliseconds
          min: 100.0
          max: 5000.0
          step: 10.0
          mode: slider
    helper_max_loops:
      name: Helper - Max number of loops
      description: Maximum number of loops when holding down a button.
      default: 20
      selector:
        number:
          min: 1.0
          max: 1000.0
          step: 1.0
          mode: slider


mode: queued
max_exceeded: silent


trigger_variables:
  z2m_base_topic: !input base_topic
  z2m_device: !input device
  z2m_device_name: !input device_name


trigger:
  - platform: mqtt
    topic: "{{ z2m_base_topic ~ '/' ~ z2m_device_name ~ '/action' }}"
    payload: "1_short_release"
    id: press-button-1
  - platform: mqtt
    topic: "{{ z2m_base_topic ~ '/' ~ z2m_device_name ~ '/action' }}"
    payload: "2_short_release"
    id: press-button-2
  - platform: mqtt
    topic: "{{ z2m_base_topic ~ '/' ~ z2m_device_name ~ '/action' }}"
    payload: "1_double_press"
    id: double-press-button-1
  - platform: mqtt
    topic: "{{ z2m_base_topic ~ '/' ~ z2m_device_name ~ '/action' }}"
    payload: "2_double_press"
    id: double-press-button-2
  - platform: mqtt
    topic: "{{ z2m_base_topic ~ '/' ~ z2m_device_name ~ '/action' }}"
    payload: "1_long_press"
    id: hold-button-1
  - platform: mqtt
    topic: "{{ z2m_base_topic ~ '/' ~ z2m_device_name ~ '/action' }}"
    payload: "2_long_press"
    id: hold-button-2
  - platform: mqtt
    topic: "{{ z2m_base_topic ~ '/' ~ z2m_device_name ~ '/action' }}"
    payload: "1_long_release"
    id: release-button-1
  - platform: mqtt
    topic: "{{ z2m_base_topic ~ '/' ~ z2m_device_name ~ '/action' }}"
    payload: "2_long_release"
    id: release-button-2


action:
  - variables:
      z2m_base_topic: !input base_topic
      z2m_device: !input device
      z2m_device_name: !input device_name
  - choose:
      - conditions:
          - condition: trigger
            id:
              - press-button-1
        sequence: !input button_1_press_action
      - conditions:
          - condition: trigger
            id:
              - press-button-2
        sequence: !input button_2_press_action
      - conditions:
          - condition: trigger
            id:
              - double-press-button-1
        sequence: !input button_1_double_press_action
      - conditions:
          - condition: trigger
            id:
              - double-press-button-2
        sequence: !input button_2_double_press_action
      - conditions:
          - condition: trigger
            id:
              - hold-button-1
        sequence:
          - repeat:
              count: !input helper_max_loops
              sequence:
                - parallel:
                    - sequence: !input button_1_hold_action
                    - sequence:
                        - choose:
                            - conditions:
                                - condition: trigger
                                  id:
                                    - hold-button-1
                              sequence:
                                - wait_for_trigger:
                                    - platform: mqtt
                                      topic: "{{ z2m_base_topic ~ '/' ~ z2m_device_name ~ '/action' }}"
                                      payload: "1_long_release"
                                  timeout:
                                    milliseconds: !input helper_hold_delay
                                  continue_on_timeout: true
                                - if:
                                    - condition: template
                                      value_template: "{{ wait.trigger.idx is defined }}"
                                  then:
                                    - stop: button released
      - conditions:
          - condition: trigger
            id:
              - hold-button-2
        sequence:
          - repeat:
              count: !input helper_max_loops
              sequence:
                - parallel:
                    - sequence: !input button_2_hold_action
                    - sequence:
                        - choose:
                            - conditions:
                                - condition: trigger
                                  id:
                                    - hold-button-2
                              sequence:
                                - wait_for_trigger:
                                    - platform: mqtt
                                      topic: "{{ z2m_base_topic ~ '/' ~ z2m_device_name ~ '/action' }}"
                                      payload: "2_long_release"
                                  timeout:
                                    milliseconds: !input helper_hold_delay
                                  continue_on_timeout: true
                                - if:
                                    - condition: template
                                      value_template: "{{ wait.trigger.idx is defined }}"
                                  then:
                                    - stop: button released
